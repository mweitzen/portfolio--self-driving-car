var x=Object.defineProperty;var O=(r,t,e)=>t in r?x(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var h=(r,t,e)=>(O(r,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=e(i);fetch(i.href,n)}})();function L(r){if(r===0)return"rgba(0,0,0,1)";const t=Math.abs(r),e=r<0?0:255,s=e,i=r>0?0:255;return`rgba(${e},${s},${i},${t})`}function B(r,t,e,s){return m(e,s,r===1?.5:t/(r-1))}function m(r,t,e){return r+(t-r)*e}function F(r,t){const e=(t[1].x-t[0].x)*(r[0].y-t[0].y)-(t[1].y-t[0].y)*(r[0].x-t[0].x),s=(t[0].y-r[0].y)*(r[0].x-r[1].x)-(t[0].x-r[0].x)*(r[0].y-r[1].y),i=(t[1].y-t[0].y)*(r[1].x-r[0].x)-(t[1].x-t[0].x)*(r[1].y-r[0].y);if(i!=0){const n=e/i,o=s/i;if(n>=0&&n<=1&&o>=0&&o<=1)return{x:m(r[0].x,r[1].x,n),y:m(r[0].y,r[1].y,n),offset:o}}return null}function P(r,t){const e=[];for(let s=0;s<r.length;s++){if(r.length==2&&s==1)continue;const i=[r[s],r[(s+1)%r.length]];for(let n=0;n<t.length;n++){if(t.length==2&&n==1)continue;const o=[t[n],t[(n+1)%t.length]],a=F(i,o);a&&e.push(a)}}return e}class W{constructor(t,e,s=3){h(this,"left");h(this,"right");h(this,"top");h(this,"bottom");h(this,"width");h(this,"laneCount");h(this,"borders");this.left=t-e/2,this.right=t+e/2,this.width=e,this.laneCount=s;const i=1e7;this.top=-i,this.bottom=i;const n={x:this.left,y:this.top},o={x:this.right,y:this.top},a={x:this.left,y:this.bottom},f={x:this.right,y:this.bottom};this.borders=[[n,a],[o,f]]}draw(t){t.lineWidth=5,t.strokeStyle="white",t.setLineDash([20,20]);for(let e=1;e<=this.laneCount-1;e++){const s=m(this.left,this.right,e/this.laneCount);t.beginPath(),t.moveTo(s,this.top),t.lineTo(s,this.bottom),t.stroke()}t.setLineDash([]),this.borders.forEach(e=>{t.beginPath(),t.moveTo(e[0].x,e[0].y),t.lineTo(e[1].x,e[1].y),t.stroke()})}getLaneCenter(t){const e=this.width/this.laneCount;return this.left+e/2+Math.min(t,this.laneCount)*e}}class z{constructor(t){h(this,"car");h(this,"rayCount",5);h(this,"rayLength",150);h(this,"raySpread",Math.PI/2);h(this,"rays");h(this,"readings");this.car=t,this.rayCount=5,this.rayLength=150,this.raySpread=Math.PI/2,this.rays=[],this.readings=[]}update(t){this.castRays(),this.readings=[],this.rays.forEach(e=>{const s=this.getReading(e,t);this.readings.push(s)})}draw(t){for(let e=0;e<this.rayCount;e++){const s=this.rays[e],n=this.readings[e]??s[1];t.beginPath(),t.lineWidth=2,t.strokeStyle="yellow",t.moveTo(s[0].x,s[0].y),t.lineTo(n.x,n.y),t.stroke(),t.beginPath(),t.lineWidth=2,t.strokeStyle="black",t.moveTo(s[1].x,s[1].y),t.lineTo(n.x,n.y),t.stroke()}}getRayCount(){return this.rayCount}castRays(){this.rays=[];for(let t=0;t<this.rayCount;t++){const e=m(this.raySpread/2,-this.raySpread/2,this.rayCount===1?.5:t/(this.rayCount-1))+this.car.getForwardAngle(),s=this.car.getCenter(),i={x:s.x,y:s.y},n={x:s.x-Math.sin(e)*this.rayLength,y:s.y-Math.cos(e)*this.rayLength};this.rays.push([i,n])}}getReadings(){return this.readings}getReading(t,e){const s=[];for(const o of e){const a=P(o,t);s.push(...a)}if(s.length===0)return null;const i=s.map(o=>o.offset),n=Math.min(...i);return s.find(o=>o.offset===n)??null}}class H{constructor(t){h(this,"forward");h(this,"reverse");h(this,"left");h(this,"right");switch(this.forward=!1,this.reverse=!1,this.left=!1,this.right=!1,t){case c.MANUAL:this.addKeyboardListener();break;case c.DUMB:this.forward=!0;break;case c.SMART:break}}addKeyboardListener(){document.onkeydown=t=>{switch(t.key){case"ArrowUp":this.forward=!0;break;case"ArrowDown":this.reverse=!0;break;case"ArrowLeft":this.left=!0;break;case"ArrowRight":this.right=!0;break}},document.onkeyup=t=>{switch(t.key){case"ArrowUp":this.forward=!1;break;case"ArrowDown":this.reverse=!1;break;case"ArrowLeft":this.left=!1;break;case"ArrowRight":this.right=!1;break}}}}const $=["⬆","⬇","⬅","➡"];class b{constructor(t,e){h(this,"levels");if(e)this.levels=e.levels.map(s=>{const{inputs:i,outputs:n,biases:o,weights:a}=s.getAttributes();return new p(i.length,n.length,o,a)});else{this.levels=[];for(let s=0;s<t.length-1;s++)this.levels.push(new p(t[s],t[s+1]))}}static feedForward(t,e){let s=p.feedForward(t,e.levels[0]);for(let i=1;i<e.levels.length;i++)s=p.feedForward(s,e.levels[i]);return s}static mutate(t,e=1){return new b([],{levels:t.levels.map(s=>{const{inputs:i,outputs:n,biases:o,weights:a}=s.getAttributes(),f=o.map(u=>m(u,Math.random()*2-1,e)),g=a.map(u=>u.map(l=>m(l,Math.random()*2-1,e)));return new p(i.length,n.length,f,g)})})}static visualizeNetwork(t,e){const i={left:50,top:50,width:t.canvas.width-100,height:t.canvas.height-100},n=i.height/e.levels.length;for(let o=0;o<e.levels.length;o++){const a=i.top+B(e.levels.length,o,i.height-n,0);p.visualizeLevel(t,e.levels[o],{...i,top:a,height:n},o===e.levels.length-1?$:void 0)}}}class p{constructor(t,e,s,i){h(this,"inputs");h(this,"outputs");h(this,"biases");h(this,"weights");if(this.inputs=new Array(t),this.outputs=new Array(e),s?this.biases=s:this.biases=new Array(e),i)this.weights=i;else{this.weights=[];for(let n=0;n<t;n++)this.weights.push(new Array(e));p.randomize(this)}}getAttributes(){return{inputs:this.inputs,outputs:this.outputs,biases:this.biases,weights:this.weights}}static randomize({inputs:t,outputs:e,weights:s,biases:i}){for(let n=0;n<t.length;n++)for(let o=0;o<e.length;o++)s[n][o]=Math.random()*2-1;for(let n=0;n<i.length;n++)i[n]=Math.random()*2-1}static feedForward(t,e){const{inputs:s,outputs:i,weights:n,biases:o}=e;for(let a=0;a<s.length;a++)e.inputs[a]=t[a];for(let a=0;a<i.length;a++)s.reduce((g,u,l)=>g+u*n[l][a])>o[a]?i[a]=1:i[a]=0;return i}static visualizeLevel(t,e,s,i){const{left:n,top:o,width:a,height:f}=s,g=n+a,u=o+f,l=19,{inputs:v,outputs:A,weights:I,biases:U}=e;for(let d=0;d<v.length;d++)for(let w=0;w<A.length;w++){const D=B(v.length,d,n,g),N=B(A.length,w,n,g),E=I[d][w];t.beginPath(),t.moveTo(D,u),t.lineTo(N,o),t.lineWidth=2,t.strokeStyle=L(E),t.stroke()}for(let d=0;d<v.length;d++){const w=B(v.length,d,n,g);t.beginPath(),t.arc(w,u,l,0,Math.PI*2),t.fillStyle=L(v[d]),t.strokeStyle="rgba(255,255,255,0.3)",t.stroke(),t.fill()}for(let d=0;d<A.length;d++){const w=B(A.length,d,n,g);t.beginPath(),t.arc(w,o,l*.8,0,Math.PI*2),t.fillStyle=L(A[d]),t.fill(),t.beginPath(),t.lineWidth=4,t.arc(w,o,l,0,Math.PI*2),t.strokeStyle=L(U[d]),t.setLineDash([3,3]),t.stroke(),t.setLineDash([0,0]),i&&(t.beginPath(),t.textAlign="center",t.textBaseline="middle",t.fillStyle=A[d]===1?"black":"lightgrey",t.strokeStyle="white",t.font=l*1+"px Arial",t.fillText(i[d],w,o+l*.1),t.lineWidth=.5,t.strokeText(i[d],w,o+l*.1))}}}var c=(r=>(r[r.SMART=0]="SMART",r[r.DUMB=1]="DUMB",r[r.MANUAL=2]="MANUAL",r))(c||{});class y{constructor(t,e,s){h(this,"type");h(this,"x");h(this,"y");h(this,"width");h(this,"height");h(this,"polygon");h(this,"forwardAngle");h(this,"speed");h(this,"acceleration");h(this,"maxSpeed");h(this,"friction");h(this,"controls");h(this,"brain");h(this,"sensor");h(this,"collision");this.type=t,this.x=e.x,this.y=e.y,this.width=s.width,this.height=s.height,this.speed=0,this.acceleration=.2,this.friction=.05,this.maxSpeed=t===1?2:3,this.collision=!1,this.forwardAngle=0,this.polygon=this.createPolygon(),this.controls=new H(t),t!==1&&(this.sensor=new z(this),this.brain=new b([this.sensor.getRayCount(),6,4]))}draw(t,e=!1){let s="white";switch(this.type){case 0:s="blue";break;case 1:s="red";break;case 2:s="black";break}this.collision&&(s="grey"),t.fillStyle=s,t.beginPath(),t.moveTo(this.polygon[0].x,this.polygon[0].y),this.polygon.forEach(i=>{t.lineTo(i.x,i.y)}),t.fill(),this.sensor&&e&&this.sensor.draw(t)}update(t){if(this.collision||(this.move(),this.polygon=this.createPolygon(),this.collision=this.detectCollision(t)),this.sensor&&this.sensor.update(t),this.sensor&&this.brain){const e=this.sensor.getReadings().map(i=>i===null?0:1-i.offset),s=b.feedForward(e,this.brain);this.type===0&&(this.controls.forward=!!s[0],this.controls.left=!!s[1],this.controls.right=!!s[2],this.controls.reverse=!!s[3])}}getBrain(){return this.brain}loadBrain(t){this.brain=t}getForwardAngle(){return this.forwardAngle}getCenter(){return{x:this.x,y:this.y}}getDimensions(){return{width:this.width,height:this.height,polygon:this.polygon}}createPolygon(){const t=[],e=Math.hypot(this.width,this.height)/2,s=Math.atan2(this.width,this.height);return t.push({x:this.x-Math.sin(this.forwardAngle-s)*e,y:this.y-Math.cos(this.forwardAngle-s)*e}),t.push({x:this.x-Math.sin(this.forwardAngle+s)*e,y:this.y-Math.cos(this.forwardAngle+s)*e}),t.push({x:this.x-Math.sin(Math.PI+this.forwardAngle-s)*e,y:this.y-Math.cos(Math.PI+this.forwardAngle-s)*e}),t.push({x:this.x-Math.sin(Math.PI+this.forwardAngle+s)*e,y:this.y-Math.cos(Math.PI+this.forwardAngle+s)*e}),t}move(){if(this.controls.forward&&(this.speed+=this.acceleration),this.controls.reverse&&(this.speed-=this.acceleration),this.speed>this.maxSpeed&&(this.speed=this.maxSpeed),this.speed<-this.maxSpeed/2&&(this.speed=-this.maxSpeed/2),this.speed>0&&(this.speed-=this.friction),this.speed<0&&(this.speed+=this.friction),Math.abs(this.speed)<this.friction&&(this.speed=0),this.speed!=0){const t=this.speed>0?1:-1;this.controls.left&&(this.forwardAngle+=.03*t),this.controls.right&&(this.forwardAngle-=.03*t)}this.x-=Math.sin(this.forwardAngle)*this.speed,this.y-=Math.cos(this.forwardAngle)*this.speed}detectCollision(t){for(const e of t)if(P(this.polygon,e).length)return!0;return!1}}const k=10,j=.3,G=1,C=X();let R;document.getElementById("save").addEventListener("click",()=>q(R));document.getElementById("discard").addEventListener("click",J);const M=document.getElementById("appCanvas"),S=document.getElementById("networkCanvas");M.width=200;S.width=400;(function(){const t=M.getContext("2d"),e=S.getContext("2d");if(!t||!e)throw new Error("Error getting Canvas Context");const s=new W(M.width/2,M.width*.9);s.draw(t);const i=new y(c.MANUAL,{x:s.getLaneCenter(1),y:100},{width:30,height:50}),n=Number(prompt("How many testers would you like to generate?"))??k,o=K(n,{x:s.getLaneCenter(G),y:100});if(C){o[0].loadBrain(C);let f=Number(prompt(`How much would you like to mutate the stored brain? 

* Between 0 (least random) and 1(most random)`))??k;(f>1||f<0)&&(f=j);for(let g=1;g<o.length;g++){const u=b.mutate(C,f);o[g].loadBrain(u)}}const a=[new y(c.DUMB,{x:s.getLaneCenter(1),y:-100},{width:30,height:50}),new y(c.DUMB,{x:s.getLaneCenter(0),y:-300},{width:30,height:50}),new y(c.DUMB,{x:s.getLaneCenter(2),y:-300},{width:30,height:50}),new y(c.DUMB,{x:s.getLaneCenter(1),y:-500},{width:30,height:50}),new y(c.DUMB,{x:s.getLaneCenter(2),y:-500},{width:30,height:50}),new y(c.DUMB,{x:s.getLaneCenter(0),y:-700},{width:30,height:50}),new y(c.DUMB,{x:s.getLaneCenter(1),y:-700},{width:30,height:50}),new y(c.DUMB,{x:s.getLaneCenter(2),y:-900},{width:30,height:50}),new y(c.DUMB,{x:s.getLaneCenter(1),y:-1100},{width:30,height:50}),new y(c.DUMB,{x:s.getLaneCenter(0),y:-1100},{width:30,height:50})];T({appCtx:t,networkCtx:e},{road:s,car:i,testers:o,traffic:a})})();function T(r,t){const{appCtx:e,networkCtx:s}=r,{road:i,car:n,testers:o,traffic:a}=t;a.forEach(l=>{l.update(i.borders)});const f=[...i.borders,...a.map(l=>l.getDimensions().polygon)];n.update(f);let g=o[0];o.forEach(l=>{l.update(f),l.getCenter().y<g.getCenter().y&&(g=l,R=l.getBrain())}),M.height=window.innerHeight,S.height=window.innerHeight,e.save(),e.translate(0,-g.getCenter().y+M.height*.7),i.draw(e),a.forEach(l=>l.draw(e)),n.draw(e),e.globalAlpha=.2,o.forEach(l=>l.draw(e)),e.globalAlpha=1,g.draw(e,!0),e.restore();const u=g.getBrain();u&&b.visualizeNetwork(s,u),requestAnimationFrame(()=>T({appCtx:e,networkCtx:s},{road:i,car:n,testers:o,traffic:a}))}function K(r,t){const e=[];for(let s=0;s<r;s++)e.push(new y(c.SMART,t,{width:30,height:50}));return e}function q(r){console.log("Saving brain..."),console.log(r),localStorage.setItem("bestBrain",JSON.stringify(r)),console.log("Brain saved!")}function J(){localStorage.removeItem("bestBrain"),console.log("Brain discarded.")}function X(){console.log("Loading brain....");const r=localStorage.getItem("bestBrain");if(r){console.log("Brain loaded!");const e=JSON.parse(r).levels.map(s=>new p(s.inputs.length,s.outputs.length,s.biases,s.weights));return new b([],{levels:e})}return console.log("No brain in storage."),null}
